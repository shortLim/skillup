<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="org.zerock.mapper.ReplyMapper">
  
  <!--   전체 댓글 수 조회 -->
  <select id="getCountByBno" resultType="int">
  <![CDATA[
  	SELECT 	COUNT(rno) 
  	FROM 	tbl_reply 
  	WHERE 	bno = #{bno}
  ]]>
  </select>
  
  <!-- 댓글 목록 조회 with paging - AFTER -->
  <select id="getListWithPaging" 
  		  resultType="org.zerock.domain.ReplyVO">
  	<![CDATA[	  
	    SELECT   rno, bno, reply, replyer, replydate, updatedate 
	    FROM     ( SELECT /*+INDEX(tbl_reply idx_reply) */
	                      rownum rn, rno, bno, reply, replyer,
	                      replydate, updatedate
	              FROM    tbl_reply
	              WHERE   bno = #{bno}
	              AND	  rno > 0
	              AND 	  rownum <= #{cri.pageNum} * #{cri.amount} )
	    WHERE    rn > (#{cri.pageNum} - 1) * #{cri.amount}
	 ]]>
  </select>
  
  <!-- 댓글 목록 조회 with paging - BEFORE -->
<!--   <select id="getListWithPaging"  -->
<!--   		  resultType="org.zerock.domain.ReplyVO"> -->
<!--     SELECT   rno, bno, reply, replyer, replydate, updatedate  -->
<!--     FROM     tbl_reply -->
<!--     WHERE    bno = #{bno}   -->
<!--     ORDER BY rno ASC -->
<!--   </select> -->
  
  <!--   게시물 수정 -->
  <update id="update">
    UPDATE tbl_reply
    SET    reply = #{reply}, updateDate = SYSDATE
    WHERE  rno = #{rno}
  </update>
  
  <!-- 게시물 하나 삭제 -->
  <delete id="delete">
  	DELETE FROM tbl_reply WHERE rno = #{rno}
  </delete>
  
  <!-- 게시물 하나 조회  -->
  <select id="read" resultType="org.zerock.domain.ReplyVO">
  	SELECT * FROM tbl_reply WHERE rno = #{rno}
  </select>
  
  <!--   insert만 수행 -->
  <insert id="insert">
	INSERT INTO tbl_reply(rno, bno, reply, replyer)
	VALUES(seq_reply.NEXTVAL, #{bno}, #{reply}, #{replyer})
  </insert>
  
<!--   쿼리 보관 
  <sql id="criteria">
   	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
 		<foreach collection="typeArr" item='type'>
 			<trim prefix="OR">
 				<choose>
 					<when test="type == 'T'.toString()">
 						title 	LIKE '%'||#{keyword}||'%'
 					</when>
 					<when test="type == 'C'.toString()">
 						content	LIKE '%'||#{keyword}||'%'
 					</when>
 					<when test="type == 'W'.toString()">
 						writer 	LIKE '%'||#{keyword}||'%'
 					</when>
 				</choose>
 			</trim>
 		</foreach>
  	</trim>
  </sql>


  게시물 조회
  <select id="getList" resultType="org.zerock.domain.BoardVO">
  <![CDATA[
    SELECT * FROM tbl_board WHERE bno > 0
  ]]>
  </select>
  
  insert가 수행되고 생성된 PK를 알아야 하는 경우
  <insert id="insertSelectKey">
  	PK를 미리 증가시켜서 bno에 저장
  	<selectKey keyProperty="bno" order="BEFORE" resultType="long">
  		SELECT seq_board.NEXTVAL FROM dual
  	</selectKey>
  	
	INSERT INTO tbl_board(bno, title, content, writer)
	VALUES(#{bno}, #{title}, #{content}, #{writer})
  </insert>
   -->
</mapper>











